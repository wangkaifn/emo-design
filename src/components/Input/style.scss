/* stylelint-disable max-nesting-depth */
$input-border-radius: 4px;
$input-padding: 4px;
$input-border-color: #ccc;

$spacers: (
  small: 24px,
  default: 32px,
  large: 40px,
);

@mixin border-radius($direction, $radius) {
  border-#{$direction}: none;
  border-bottom-#{$direction}-radius: $radius;
  border-top-#{$direction}-radius: $radius;
}

.input {
  display: inline-flex;
  justify-content: center;
  align-items: center;

  input {
    width: 100%;
    height: 100%;
    color: inherit;
    appearance: none;
    outline: none;
    border: 0;
  }

  .input-wrapper {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: $input-padding;
    border: 1px solid $input-border-color;
    // background-color: transparent;
    border-radius: $input-border-radius;
  }
  @each $key, $value in $spacers {
    &.input-#{$key} {
      .input-wrapper {
        height: $value;
      }

      .addon {
        height: $value;
      }
    }
  }

  .addon {
    display: inline-flex;
    align-items: center;
    padding: 0 $input-padding;
    border: 1px solid $input-border-color;

    &.before {
      border-top-left-radius: $input-border-radius;
      border-bottom-left-radius: $input-border-radius;
    }

    &.after {
      border-top-right-radius: $input-border-radius;
      border-bottom-right-radius: $input-border-radius;
    }
  }

  &.input-before {
    .input-wrapper {
      @include border-radius('left', 0);
    }
  }

  &.input-after {
    .input-wrapper {
      @include border-radius('right', 0);
    }
  }

  .prefix,
  .suffix {
    display: inline-flex;
    align-items: center;
  }

  &.disabled {
    .input-wrapper {
      background-color: #f5f5f5;
      cursor: not-allowed;

      input {
        cursor: not-allowed;
        background-color: none;
      }
    }
  }

  &.allow-clear {
    cursor: pointer;

    .clear-icon {
      display: inline-flex;
      margin-right: 4px;
      width: 18px;
    }
  }
}
